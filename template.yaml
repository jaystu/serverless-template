# This AWS SAM template has been generated from your function's configuration. If
# your function has one or more triggers, note that the AWS resources associated
# with these triggers aren't fully specified in this template and include
# placeholder values. Open this template in AWS Application Composer or your
# favorite IDE and modify it to specify a serverless application with other AWS
# resources.
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your function.
Globals:
  Api:
    OpenApiVersion: 3.0.1
Parameters:
  Stage:
    Type: String
    Default: staging
    AllowedValues:
      - staging
      - prod
Resources:
  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
  PetFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Stage}-pet
      CodeUri: ./lambda_function/
      Description: ''
      MemorySize: 128
      Timeout: 3
      Handler: app.lambda_handler
      Runtime: python3.9
      RuntimeManagementConfig:
        UpdateRuntimeOn: FunctionUpdate
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref PetTable
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref PetTable
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /pet
            Method: POST
            RestApiId: !Ref RestApi
        Api2:
          Type: Api
          Properties:
            Path: /pet/{id}
            Method: DELETE
            RestApiId: !Ref RestApi
        Api3:
          Type: Api
          Properties:
            Path: /pet/{id}
            Method: GET
            RestApiId: !Ref RestApi
        Api4:
          Type: Api
          Properties:
            Path: /pet/{id}
            Method: PUT
            RestApiId: !Ref RestApi
  PetTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${Stage}-pet
      BillingMode: PAY_PER_REQUEST  # On-demand capacity
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S  # Replace with your attribute types
      KeySchema:
        - AttributeName: id
          KeyType: HASH
          
Outputs:
  PetApi:
    Description: "API URL endpoint for triggering the pet service."
    Value: !Sub "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/pet/"
  HelloWorldFunction:
    Description: "Pet Lambda Function ARN"
    Value: !GetAtt PetFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for pet function"
    Value: !GetAtt PetFunctionRole.Arn
